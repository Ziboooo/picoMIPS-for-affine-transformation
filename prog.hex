// picoMIPS PROGRAMM
// filename: prog.hex
// function: programm // affine transformation 
// author: zy1u21
// version: 1 // 18 instruction: 20'b 2b opcode, 5b %d, 5b %s, 8b immediate (7th Wready)
//            2 // 16 instructions: 20'b 2b opcode, 5b %d, 5b %s, 8b immediate (7th Wready)
//               3// 12 instructions: 20'b 2b opcode, 3b %d, 3b %s, 8b immediate (7th Wready)
// HEX /////////// BINARY  ///////////////////// ASSEMBLER /////////
c100            // 11,00 0,001 0000 0000      B                : branch, KEEP 0+Y2,if SW = 1, stay; if SW = 0, increment  1 change
C140            // 11,00 0,001 0100 0000      B                : branch, if SW = 0, stay; if SW = 1, increment  2
C100            // 11,00 0,001 0000 0000      B                : branch, if SW = 1, stay; if SW = 0, increment  3
0140            // 00,00 0,001 0100 0000      ADD %0 %1 %64    : Wready = 1, store x1 from input to reg1        4
C140            // 11,00 0,001 0100 0000      B                : branch, if SW = 0, stay; if SW = 1, increment  5
C100            // 11,00 0,001 0000 0000      B                : branch, if SW = 1, stay; if SW = 0, increment  6
0240            // 00,00 0,010 0100 0000      ADD %0 %2 %64    : Wready = 1, store x1 from input to reg2        7
8B60            // 10,00 1,011 0110 0000      MULI %1 %3 %a11  : multiplcation, store a11*x1 to reg3            8
89C0            // 10,00 1,001 1100 0000      MULI %1 %1 %a21  : multiplcation, store a21*x1 to reg1            10   change

9440            // 10,01 0,100 0100 0000      MULI %2 %4 %a12  : multiplcation, store a12*y1 to reg4            9

9260            // 10,01 0,010 0110 0000      MULI %2 %2 %a22  : multiplcation, store a22*y1 to reg2            11   change
1C00            // 00,01 1,100 0000 0000      ADD %3 %4 %0     : addition a11*x1+a12*y1 to reg4                 12  
0A00            // 00,00 1,010 0000 0000      ADD %1 %2 %0     : addition a21*x1+a22*y1 to reg2                 13   change

6314            // 01,10 0,011 0001 0100      ADDI %4 %3 %b1   : addition x2 to reg3                            14  x2 is in 
C340            // 11,00 0,011 0100 0000      B %0 %3          : branch,keep 0+X2 if SW = 0, stay; if SW = 1, increment  (17)15
51EC            // 01,01 0,001 1110 1100      ADDI %2 %1 %b2   : addition y2 to reg1                            (15)16 change
//46700            // 01,01 1,111 0000 0000      ADDI %3 %7 %0    : addition x2 to reg7                            (16)
//C0040            // 11,00 0,000 0100 0000      B                : branch, if SW = 0, stay; if SW = 1, increment  (17)
//4A700            // 01,10 1,111 0000 0000      ADDI %3 %7 %0    : addition y2 to reg7                            (18)   
 
 
 
  
 

